1: 25/04/2020: Damn!! I can't code at night, anyway I tried to solve codeforces 700 question and inderstood the approach too but I have problem coding at night I feel sleepy.
                P.S: It's not even 11:00pm yet.

2: 28/04/2020: Taking very huge as input on int var = Scanner.nextInt() won't work (Input mismatch)
                I should be using long var = Scanner.nextLong()

3: 07/05/2020: I understimated the problem https://codeforces.com/problemset/problem/1230/A.... Solved in CPP
                Still Incomplete

4: 08/05/2020: Completed the last days problem: tip for Coding Questions if it is small then hardcode it 
                eg for last problem only 4 times iteration was required, hence used 4 loops

5: 12/05/2020: Solved a problem (see AbAb), It first felt like, I won't be able to solve this problem, but then I started thinking and took pencil and paper to figure out the 
                solution. Finally it worked!! (first try!! although it's thanks to test cases (see note))
                Note: Always check the range, cos sometimes we need to use long instead of int

6: 13/05/2020: BDcake.java (3rd of the day) Seemed complex, had problem taking inputs(chars). Finally solved, I had to derive a formula for # of combinations to solve this. 
	       (Again: Pen and Paper works!! (Formula))
		- StonePile (Always! Always!!!) run on given test case example! Helps understand question better

7: 14/05/2020: I thought CodeForces is conspiring against me. PrimeMinister problem. N.B Always double check the expected output format!!! (Good Question though)
		- I participated in first codeforces competition (div3). Solved 2/6 (almost +1). It was a good experience. 

8: 17/05/2020: A good implementation that I did for a for loop (lol for-for). Checkout GameOutput (Problem 157A). I can see myself getting abit better

9: 21/05/2020: Solved a problem see candy2. It didn't got accepted b'cos time out but I found a more accurate solution. 
		- Remember in CP time matter a lot.

10: 23/05/2020: Prod1: (1206B). Logic correct, tested(all ok), forgot long range and and and..... also I waas multiplying really long numbers which caused it to go out of range too!
		Hence had to change approach, (prev I was multiplying long, now I just counted the no of -vs insted of multiplying it). Good One! Took around 90 mins to fix!!!

11: 24/05/2020: CodeForces Div3 #644. I solved 4/8 problems. almost +1 but... that took me alot of time and I was not able to solve it. Remember to alott time.
		Got rank in 5ks and rating dropped to 1349. (Unexpected, probably due to changes in rating)

12: 26/05/2020: Only one question 1291A took me around 3 hours and wasted on other stuffs too. I couldn't solve it, was about to give up and just leave. but Saw the editorial and voila,
		it was soo easy, I just couldn't see the approach.
		+ Taking input took me time. I thought I got Good at it but no!, I gotta improve in taking input string-> int arr

13: 27/05/2020: Tried 2 so far.... On first it was some crazy set implementation (see 1313A FastFood) so skipped it after trying alot,
		The second (1197A) one got solved..... was happy but then the damn timeout error showed up!!!
			1197A notes - At first I was using "continue;" before taking input that caused problem.
				    - I had to sort an array (to find the 2nd max element, that threw timeout error in java)
		* Finally Solved the second (1197A). Took help from GeeksForGeeks to find 2nd max no from array. O(N) whereas java's sort takes O(nlogn)

14: 30/05/2020: Doggo Problem. CodeForces 900 (1025A). It should have taken a lot of time, with intuition however it was quite easy.
		(It's the case for most of the low level problems!!) 

15: 04/06/2020: 1057A - Bmail Computer Network: First time used stack. Took time to come up with implementation. But was worth it (* special problem)

16: 05/06/2020: 1A. My first 1000 problem, Always remember the range of input.... use double/long
		- 131A (1000): I don't think this problem was properly explained..... Took me alot of submissions to clear the problem statement by looking at test cases.

17: 06/06/2020: One more example of not so good question, It was more of a word play!! anyway I played a lil dirty and hardcoded.... 732B Corman (1000)

18: 07/06/2020: Checkout problem: 766B, and what was the need to sort. (It's b'cos the best possible way to form a non degenerate triangle is by closest sides)
		- Tried to solve CodeChef, getting NZEC error, maybe b'cos of mismatch in input format for CodeChef.

19: 9/06/2020: I didn't read the question properly... Just tested on sample cases, I need to read the problem and code based on every statement present on question,
		not just making a rough solution that satisfies the given sample test cases... (Problem: 798A)

20: 13/06/2020: Silly me, Silly me!! CF 1027-A: This was a string problem where we could shift the characters to +1 or -1...
		In question it was mentioned that we shouldn't perform rotation i.e, a!=z....
		But, misinterpreted it... and ended up solving it by rotating, it took alot of time and was not that good of a code
		Anyway, few learning points:
		- if I want to create a char -> arr map, we can use for each char ch: arr[i++] = (ch - 97)%26
		  this way 'a' will be at 0 index and so on... It makes it easy to understand
		  previously I was not subtracting by 97 and it got difficult to interpret b'cos a was at index 17 or something which wasn't very intuitive..
		
21: 14/06/2020: 1136/B, I think this was a good question for me, it took me some thinking to come up with formulae for getting travel and blocks movement moves.

22: 15/06/2020: I can see improvement: CF 1117/B, needed top 2 max nos. So, Instead of sorting I only kept top 2 and didn't even create an array to store other nos,
		and then had to write a math formula to find out sum.... Checkout, a good problem. (Emote.java)
		+1 CF 465/B: Inbox.java, It was an implementation problem, the thing about implementation problems is that you gotta look at the problem very well
		and try to come up with a formula/ try to simplify the problem...... The formula for this problem that I came up with doesn't feel that efficient.

23: 16/06/2020: Good One, 822B, window score (idk what to call it...) first time did something like this
		+ CodeForces Round #650 (Div 3)

24: 17/06/2020: Others/MergeSortedArray: I got the idea but while implementing I was over complicating things..... Thanks to GeekForGeeks for helping me clear implementation.
		++ Dudee!!! The CodeForces questions are getting tougher as I am progressing through levels,
		here 864B was string related, I had to do quite a lot and used test cases to anyhow submit it,
		It's about time I analyze editorials of each problem that I solve or try to solve.....

25: 22/06/2020: Problem: 727A, At first it seemed easy but I was doing one promitive mistake which was unclear by checking only test cases..... 
		(see inline comments for specific). I should test my code with my own edge and other test cases.

26: 23/06/2020: Problem: 1366/A: This was a unique one, first came up with a solution which wasn't correct(Only checking max/min and a WRONG implementation based on it)
		Then I solved it using an iterative method, Works correctly but time limit exceeded. Damn!!
		(I think I should start solving in the morning and checkout editorial or other resource for the problem that I can't solve (OR solve too!! I'm not that efficient yets))

27: 28/06/2020: CodeForces Div3 Round 653 1 only one: Not a good feeling my 3rd contest and I'm solving lesser problems then ever.
		In this round I solved only C; A & B time out; D partially solved; E1, E2 and F Didn't even had a look.
		Feeling Down :(

28: 30/06/2020: CTCI, Solved problem: String with all possible solution + Learn bit manipulation (BitSet).

29: 02/07/2020: Stack, man I couldn't solve two problems from GFG (Solved but nothing better than O(N^2)) it's given that it can be solved by using stacks in O(N) but I didn't get the hint
		+ CTCI problem OneAway, I solved this but I had a really bad bug!! After checking the hint, I was able to solve it in O(N) but the implementation wasn't that cool (lots of DS)
		  after looking at solution at CTCI, saw a cool and simple implementation without any need of complex DS (Hash and others)
		> TIP: try to simplify things as much as possible, eg try to solve by using simple array before throwing a hashmap or other DS on it

30: 06/07/2020: ZeroMatrix from CTCI/Arrays-Strings:
		> Learning: Always comeup with a brute force first which can be implemented, don't be stuck optimising on the first go; first make Brute Force and then optimise later.
			
31: 08/07/2020: Sometimes we need to assume data structure implementation, eg CTCI/KthLast.java, here we had to solve a problem of linked list,
		and java collection's LinkedList doesn't have Nodes and next references, So we had to assume that we have an LinkedList implementation
		with Nodes and underlying pointers.

32: 09/07/2020: I should start writing down my thinking too, befor moving forward whatever that is coming in my mind even if I know at some point/case it'll be wrong.
		- NB I made a mistake while solveing CTCI/linked-list/Delete-middle: I didn't read the question very carefully. Only a single node is given and no information about head!

33: 10/07/2020: It's hard to concentrate at problem solving/ screens in general after a long day of work/
		I did an easy one, even in that i got two wrong submissions, I didn't read the question carefully;
		Always remember to be in well rested and good state while problem solving; I cou;ldn't even understatnd CTCI/LinkedLIst/ Move to left problem; I ended up solving CF 800

34: 13/07/2020: I modded one CTCI problem to use my implementation of LinkedList, it worked!

35: 15/07/2020: CTCI problems 2x : Intersection and detect loop: Got to learn one cool technique of fast and slow pointer to detect if loop exists or not!! 
				   The full problem still unsolved of detecting loop.